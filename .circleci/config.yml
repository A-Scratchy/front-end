version: 2.1

orbs:
  cypress: cypress-io/cypress@1.13.0

executors:
  default:
    docker:
      - image: circleci/node:12.14.0 # keep in sync with .nvmrc and other executors
    environment:
      CC_TEST_REPORTER_ID: 0f2bc6ef737019bfc8eda369cd06b66c54606b144b4d81cec010fb494d2559af
  cypress:
    docker:
      - image: cypress/base:12.14.0 # keep in sync with .nvmrc and other executors
    environment:
      CC_TEST_REPORTER_ID: 0f2bc6ef737019bfc8eda369cd06b66c54606b144b4d81cec010fb494d2559af

commands:
  restore_node_modules:
    steps:
      - run:
          name: Restore cached artifacts (install dependencies once, and pass around the folder)
          command: |
            mv ~/node_modules .
            mv ~/.cache .

parameters:
  workspace_root:
    type: string
    default: '~/'
  cache_key:
    type: string
    default: operation-code-{{ checksum "yarn.lock" }}

jobs:
  install_dependencies:
    executor: default
    steps:
      - checkout
      - attach_workspace:
          at: << pipeline.parameters.workspace_root >>
      - restore_cache:
          keys:
            - << pipeline.parameters.cache_key >>
      - run:
          name: Install dependencies
          command: |
            yarn --frozen-lockfile
      - save_cache:
          key: << pipeline.parameters.cache_key >>
          paths:
            - .cache/yarn
      - run:
          name: Move dependencies to workspace
          command: |
            mv node_modules << pipeline.parameters.workspace_root >>/
            mv .cache << pipeline.parameters.workspace_root >>/
      - persist_to_workspace:
            root: << pipeline.parameters.workspace_root >>
            paths:
              - project
              - node_modules
              - .cache

  unit-tests:
    executor: default
    steps:
      - checkout
      - attach_workspace:
          at: << pipeline.parameters.workspace_root >>
      - restore_node_modules
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run:
          name: Copy Cypress test results and remove unnecessary paths
          command: |
            mkdir coverage && find . -name "codeclimate.*.json" -exec cp -av {} coverage \;
            ls ~/ -al
            rm -rf ~/project/project ~/project/.cache
      - run:
          name: Run tests
          command: |
            yarn test:ci --silent=false
      - run:
          name: Initialize CodeClimate
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > /usr/local/bin/cc-test-reporter
            chmod +x /usr/local/bin/cc-test-reporter
            /usr/local/bin/cc-test-reporter before-build
      - run:
          name: Merge results and report to CodeClimate
          command: |
            ls -al
            ls -al coverage
            ls -al jest-coverage
            /usr/local/bin/cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.jest.json jest-coverage/lcov.info
            /usr/local/bin/cc-test-reporter sum-coverage -p 4 --output - coverage/* | /usr/local/bin/cc-test-reporter upload-coverage --debug --input -

  lint:
    executor: default
    steps:
      - checkout
      - attach_workspace:
          at: << pipeline.parameters.workspace_root >>
      - run: ls -al
      - restore_node_modules
      - run:
          name: Lint
          command: |
            yarn lint:ci

workflows:
  default:
    jobs:
      - install_dependencies

      - unit-tests:
          requires:
            - install_dependencies
            - cypress/run

      - lint:
          requires:
            - install_dependencies

      - cypress/install:
          executor: cypress
          requires:
            - install_dependencies
          name: cypress/install
          yarn: true
          cache-key: << pipeline.parameters.cache_key >>

      - cypress/run:
          executor: cypress
          requires:
            - cypress/install
          name: cypress/run
          record: true # record results on Cypress Dashboard
          yarn: true # use yarn instead of npm
          cache-key: << pipeline.parameters.cache_key >>
          parallel: true # split all specs across machines
          parallelism: 3 # use 3 CircleCI machines to finish quickly
          group: 'all tests' # name this group "all tests" on the dashboard
          start: 'yarn dev' # start server before running tests
          wait-on: http://localhost:3000 # wait until server is ready
          post-steps:
            - run:
                command: |
                  curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
                  chmod +x ./cc-test-reporter
                  mkdir coverage && ./cc-test-reporter format-coverage -t lcov -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json" cypress-coverage/lcov.info
            - persist_to_workspace:
                root: << pipeline.parameters.workspace_root >>
                paths:
                  - coverage
