version: 2.1

orbs:
  cypress: cypress-io/cypress@1.16.1

executors:
  default:
    docker:
      - image: cypress/base:12.16.1 # keep in sync with .nvmrc and any other executors
    environment:
      CC_TEST_REPORTER_ID: 0f2bc6ef737019bfc8eda369cd06b66c54606b144b4d81cec010fb494d2559af

parameters:
  workspace_root:
    type: string
    default: '~/'
  cache_key:
    type: string
    default: 'dependencies-2-{{ checksum "yarn.lock" }}'

aliases:
  - &yarn_install
    name: Install dependencies
    command: yarn install --non-interactive --frozen-lockfile --production=false --cache-folder << pipeline.parameters.workspace_root >>.cache/yarn

  - &restore_cache
    keys:
      - << pipeline.parameters.cache_key >>

  - &initialize_code_climate
    name: Initialize CodeClimate
    command: |
      curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./code_climate_test_reporter
      chmod +x ./code_climate_test_reporter

jobs:
  install_dependencies:
    executor: default
    steps:
      - checkout
      - attach_workspace:
          at: << pipeline.parameters.workspace_root >>
      - restore_cache: *restore_cache
      - run: *yarn_install
      - save_cache:
          key: << pipeline.parameters.cache_key >>
          paths:
            - node_modules
            - << pipeline.parameters.workspace_root >>.cache
            - << pipeline.parameters.workspace_root >>.cache/yarn
            - << pipeline.parameters.workspace_root >>.cache/Cypress

  unit-tests:
    executor: default
    steps:
      - checkout
      - attach_workspace:
          at: << pipeline.parameters.workspace_root >>
      - restore_cache: *restore_cache
      - run:
          name: Run tests
          command: |
            yarn test:ci --silent=false
      - run: *initialize_code_climate
      - run:
          name: Create coverage report
          command: |
            ./code_climate_test_reporter before-build
            mkdir coverage
            ./code_climate_test_reporter format-coverage -t lcov -o coverage/codeclimate.jest.json jest-coverage/lcov.info
      - persist_to_workspace:
          root: << pipeline.parameters.workspace_root >>
          paths:
            - project/coverage
            - ./code_climate_test_reporter


  lint:
    executor: default
    steps:
      - checkout
      - attach_workspace:
          at: << pipeline.parameters.workspace_root >>
      - restore_cache: *restore_cache
      - run:
          name: Lint
          command: |
            yarn lint:ci

workflows:
  default:
    jobs:
      - install_dependencies

      - unit-tests:
          requires:
            - install_dependencies

      - lint:
          requires:
            - install_dependencies

      - cypress/install:
          executor: default
          requires:
            - install_dependencies
          name: cypress/install
          yarn: true
          cache-key: << pipeline.parameters.cache_key >>
          post-steps:
            - run: ls -al

      - cypress/run:
          executor: default
          requires:
            - unit-tests
            - cypress/install
          name: cypress/run
          record: true # record results on Cypress Dashboard
          yarn: true # use yarn instead of npm
          cache-key: << pipeline.parameters.cache_key >>
          parallel: true # split all specs across machines
          parallelism: 3 # use 3 CircleCI machines to finish quickly
          group: 'all tests' # name this group "all tests" on the dashboard
          start: 'yarn dev' # start server before running tests
          wait-on: http://localhost:3000 # wait until server is ready
          post-steps:
            - run: *initialize_code_climate
            - run:
                name: Merge coverage reports and upload to Code Climate
                command: |
                  ls -al
                  find . -name "codeclimate.*.json" -exec cp -av {} coverage \;
                  ./code_climate_test_reporter format-coverage -t lcov -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json" cypress-coverage/lcov.info
                  ./code_climate_test_reporter sum-coverage -p 4 --output - coverage/* | ./code_climate_test_reporter upload-coverage --debug --input -
